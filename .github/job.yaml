name: Hyves React Front-end
run-name: "${{ github.actor }} ran ${{ github.workflow }} on ${{ github.ref_name }}"
on:
  push:
    branches:
      - development
    paths:
      - "/"
  pull_request:
    branches:
      - main
      - development
    paths:
      - "/"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    #- name: Run linter
    #  run: npm run lint
    
    #- name: Run tests
    #  run: npm test
    
    - name: Build project
      run: npm run build

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    runs-on: ubuntu-latest
    if: github.base_ref != 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build docker image
        run: |
          docker build -t 'ghcr.io/reviving-hyves/hyves-front-end' -f Dockerfile .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
  
      - name: Push Docker Image
        run: docker push ghcr.io/reviving-hyves/hyves-front-end


  # deployment job
  # deploy:
  #   needs: docker-build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
    
  #   steps:
  #   - name: Deploy to production
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.SERVER_HOST }}
  #       username: ${{ secrets.SERVER_USERNAME }}
  #       key: ${{ secrets.SERVER_SSH_KEY }}
  #       script: |
  #         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/react-app:latest
  #         docker stop react-app || true
  #         docker rm react-app || true
  #         docker run -d --name react-app -p 3000:80 ${{ secrets.DOCKERHUB_USERNAME }}/react-app:latest