name: Hyves React Front-end
run-name: "${{ github.actor }} ran ${{ github.workflow }} on ${{ github.ref_name }}"

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Start PostgreSQL container
      run: |
        docker run -d --name auth_db --network hyves -e POSTGRES_DB=auth_db -e POSTGRES_PASSWORD=pswd -e POSTGRES_USER=usr -p 5432:5432 postgres:13
    
    - name: Pull backend microservice image
      run: |
        docker pull ghcr.io/reviving-hyves/hyves-back-end/auth:latest

    - name: Start auth microservice
      run: |
        docker run -d --name auth --network hyves -p 8002:8000 -e DJANGO_ENV=production -e DATABASE_ENGINE=django.db.backends.postgresql -e DATABASE_NAME=postgres -e DATABASE_USER=usr -e DATABASE_PASSWORD=pswd -e DATABASE_HOST=auth_db -e DATABASE_PORT=5432 ghcr.io/reviving-hyves/hyves-back-end/auth:latest && docker exec auth python manage.py makemigrations && docker exec auth python manage.py migrate

    - name: Cypress run
      uses: cypress-io/github-action@v6
      with:
        build: npm run build
        start: npm start

    - name: Stop backend container
      run: docker stop backend-service && docker rm backend-service
